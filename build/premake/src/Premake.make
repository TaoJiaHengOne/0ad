# Sub-makefile autogenerated by premake

BINDIR = .
LIBDIR = .

CFLAGS =
LDFLAGS = -L$(BINDIR) -L$(LIBDIR)
TARGET =

ifeq ($(CONFIG),Debug)
  CFLAGS +=
  CXXFLAGS = $(CFLAGS)
  LDFLAGS +=
  TARGET = premake
endif
ifeq ($(CONFIG),Release)
  CFLAGS += -Os
  CXXFLAGS = $(CFLAGS) -Os
  LDFLAGS +=
  TARGET = premake
endif

obj/%.o : %.cc
	-@if [ ! -d obj ]; then mkdir obj; fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -MD -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d obj/$*.d; fi
	@cp obj/$*.d obj/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < obj/$*.d >> obj/$*.P; \
	rm -f obj/$*.d

obj/%.o : %.cpp
	-@if [ ! -d obj ]; then mkdir obj; fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -MD -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d obj/$*.d; fi
	@cp obj/$*.d obj/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < obj/$*.d >> obj/$*.P; \
	rm -f obj/$*.d

obj/%.o : %.cxx
	-@if [ ! -d obj ]; then mkdir obj; fi
	@echo $(notdir $<)
	@$(CXX) $(CXXFLAGS) -MD -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d obj/$*.d; fi
	@cp obj/$*.d obj/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < obj/$*.d >> obj/$*.P; \
	rm -f obj/$*.d

obj/%.o : %.c
	-@if [ ! -d obj ]; then mkdir obj; fi
	@echo $(notdir $<)
	@$(CC) $(CFLAGS) -MD -o $@ -c $<
	-@if [ -f $*.d ]; then mv $*.d obj/$*.d; fi
	@cp obj/$*.d obj/$*.P; \
	 sed -e 's/#.*//' -e 's/^[^:]*: *//' -e 's/ *\\$$//' \
	 -e '/^$$/ d' -e 's/$$/ :/' < obj/$*.d >> obj/$*.P; \
	rm -f obj/$*.d

OBJECTS = \
	obj/premake.o \
	obj/project.o \
	obj/util.o \
	obj/clean.o \
	obj/gnu.o \
	obj/sharpdev.o \
	obj/vs7.o \
	obj/vs6.o \
	obj/lapi.o \
	obj/lauxlib.o \
	obj/lbaselib.o \
	obj/lcode.o \
	obj/ldebug.o \
	obj/ldo.o \
	obj/lfunc.o \
	obj/lgc.o \
	obj/liolib.o \
	obj/llex.o \
	obj/lmathlib.o \
	obj/lmem.o \
	obj/lobject.o \
	obj/lparser.o \
	obj/lstate.o \
	obj/lstring.o \
	obj/lstrlib.o \
	obj/ltable.o \
	obj/ltests.o \
	obj/ltm.o \
	obj/lundump.o \
	obj/lvm.o \
	obj/lzio.o \
	obj/posix.o \

VPATH = Src Src/Lua

.PHONY: clean

$(BINDIR)/$(TARGET): $(OBJECTS)
	@echo Linking Premake
	-@if [ ! -d $(BINDIR) ]; then mkdir $(BINDIR); fi
	-@if [ ! -d $(LIBDIR) ]; then mkdir $(LIBDIR); fi
	@$(CXX) -o $@ $(filter-out %.so, $^) $(LDFLAGS)

clean:
	@echo Cleaning Premake
	-@rm -rf $(BINDIR)/$(TARGET) obj/*

-include $(OBJECTS:%.o=%.P)

